{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/canvas.service.ts","webpack:///./src/app/circle.model.ts","webpack:///./src/app/move-type.enum.ts","webpack:///./src/app/position.model.ts","webpack:///./src/app/turn.enum.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCZA,sgBAA8B,IAAK,uHAC9B,KAAS,qPAAI,KACR,sHAAI,kFAAK,MAAkB,sHAAI,gFAAQ,MAA4B,sHAAI,KAAa,uHAAI,uFAAU,MAAkB,uHAAI,iFAAY,MAA4B,uHAAI,KAAa,uHAAI,4FAAe,MAAkB,uHAAI,iFAAiB,MAA4B,uHAAI,KAAa,uHAAI,8FAAiB,MAAkB,uHAAI,iFAAmB,MAA4B,uHAAI,KAAa,uHAAI,uFAAU,MAAkB,uHAAI,iFAAY,MAA4B,uHAAI,KAAa,uHAAI,yFAAY,MAAkB,uHAAI,iFAAc,MAA6C,oiBAAqD,IAAK,6KAA6C,8EAAC,yDAA1oB,iDAAQ,GAAiF,sDAAY,GAAsF,2DAAiB,GAAwF,6DAAmB,GAAiF,sDAAY,GAAmF,wDAAc;;;;;;;;;;;;;;;;ACF9hB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACR;AACL;AACK;AAEd;AAEjC;IAAA;QAiBI,SAAI,GAAS,+CAAI,CAAC,GAAG,CAAC;QACtB,aAAQ,GAAa,wDAAQ,CAAC,MAAM,CAAC;QACrC,cAAS,GAAc,EAAE,CAAC;QAC1B,gBAAW,GAAc,EAAE,CAAC;QAE5B,YAAO,GAAc,EAAE,CAAC;QAExB,oBAAe,GAAG,EAAE,CAAC;IAgMzB,CAAC;IA5LG,kCAAW,GAAX;QACI,IAAI,CAAC,OAAO,GAAG;YACX,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YAExD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YAExD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YAExD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YAExD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YAExD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YAExD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC;YACxD,IAAI,oDAAM,CAAC,CAAC,E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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<mat-card class=\"score-board\">\n    <table>\n        <tr>\n            <td>Turn:</td>\n            <td>{{turn}}</td>\n        </tr>\n        <tr>\n            <td>Move type:</td>\n            <td>{{moveType}}</td>\n        </tr>\n        <tr>\n            <td>Available reds:</td>\n            <td>{{availableReds}}</td>\n        </tr>\n        <tr>\n            <td>Available greens:</td>\n            <td>{{availableGreens}}</td>\n        </tr>\n        <tr>\n            <td>Used reds:</td>\n            <td>{{usedReds}}</td>\n        </tr>\n        <tr>\n            <td>Used greens:</td>\n            <td>{{usedGreens}}</td>\n        </tr>\n    </table>\n</mat-card>\n<mat-card class=\"canvas-wrapper\" id=\"canvas-wrapper\">\n    <canvas id=\"canvas\" width=\"500\" height=\"500\">></canvas>\n</mat-card>\n","import {AfterViewInit, Component} from '@angular/core';\nimport {Circle, ICircle} from './circle.model';\nimport {MoveType} from './move-type.enum';\nimport {CanvasService} from './canvas.service';\nimport {IPosition} from './position.model';\nimport {Turn} from \"./turn.enum\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements AfterViewInit {\n    canvas: HTMLCanvasElement;\n    availableReds: number;\n    availableGreens: number;\n    usedReds: number;\n    usedGreens: number;\n\n\n    baseSize: number;\n\n    offset: number;\n    baseRadiusSize: number;\n    turn: Turn = Turn.RED;\n    moveType: MoveType = MoveType.NORMAL;\n    redPieces: ICircle[] = [];\n    greenPieces: ICircle[] = [];\n\n    circles: ICircle[] = [];\n\n    piecesPerPlayer = 15;\n\n    canvasService: CanvasService;\n\n    initCircles() {\n        this.circles = [\n            new Circle(0, 0, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(3, 0, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(6, 0, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n\n            new Circle(1, 1, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(3, 1, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(5, 1, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n\n            new Circle(2, 2, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(3, 2, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(4, 2, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n\n            new Circle(0, 3, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(1, 3, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(2, 3, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n\n            new Circle(4, 3, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(5, 3, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(6, 3, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n\n            new Circle(2, 4, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(3, 4, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(4, 4, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n\n            new Circle(1, 5, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(3, 5, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(5, 5, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n\n            new Circle(0, 6, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(3, 6, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n            new Circle(6, 6, this.baseRadiusSize, 'rgba(0,0,0,255)'),\n        ];\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => this.afterVieInitCallback());\n    }\n\n    afterVieInitCallback(): void {\n        this.canvas = document.getElementById('canvas') as HTMLCanvasElement;\n        this.baseSize = this.canvas.width / 8;\n        this.offset = this.baseSize;\n        this.baseRadiusSize = this.baseSize / 6;\n        this.canvasService = new CanvasService(this.canvas, this.baseSize, this.offset);\n\n        this.initializePlayersPieces();\n\n        this.initCircles();\n        this.drawBoard();\n        this.addCanvasOnClickListener();\n    }\n\n    initializePlayersPieces(): void {\n        for (let i = 0; i < this.piecesPerPlayer; ++i) {\n            this.redPieces.push(new Circle(null, null, this.baseRadiusSize * 2, 'rgba(180,0,0,255)'));\n            this.greenPieces.push(new Circle(null, null, this.baseRadiusSize * 2, 'rgba(0,100,0,255)'));\n        }\n    }\n\n    addCanvasOnClickListener(): void {\n        this.canvas.addEventListener('click', (mouseEvent) => {\n            const relativePosition = this.canvasService.getMousePositionInCanvas(mouseEvent);\n            const pixel = this.canvasService.getPixel(relativePosition);\n            if (this.moveType === MoveType.NORMAL) {\n                this.performNormalMove(relativePosition, pixel);\n            } else if (this.moveType === MoveType.REMOVE) {\n                this.performRemoveMove(relativePosition);\n            }\n        });\n    }\n\n    performNormalMove(relativePosition: IPosition, pixel: string): void {\n        this.circles.forEach(circle => {\n            if (this.canvasService.isIntersect(relativePosition, circle)) {\n                if (circle.color === 'rgba(' + pixel + ')') {\n                    if (this.turn === Turn.RED) {\n                        this.setAvailablePiece(this.redPieces, circle);\n                    } else {\n                        this.setAvailablePiece(this.greenPieces, circle);\n                    }\n                }\n            }\n        });\n    }\n\n    performRemoveMove(relativePosition: IPosition): void {\n        if (this.turn === Turn.GREEN) {\n            const foundPiece = this.findIntersectingPiece(this.redPieces, relativePosition);\n            if (foundPiece) {\n                this.redPieces = this.redPieces.filter(piece => piece.x !== foundPiece.x || piece.y !== foundPiece.y);\n                this.moveType = MoveType.NORMAL;\n                this.changeTurn();\n            }\n        } else {\n            const foundPiece = this.findIntersectingPiece(this.greenPieces, relativePosition);\n            if (foundPiece) {\n                this.greenPieces = this.greenPieces.filter(piece => piece.x !== foundPiece.x || piece.y !== foundPiece.y);\n                this.moveType = MoveType.NORMAL;\n                this.changeTurn();\n            }\n        }\n    }\n\n    drawBoard(): void {\n        this.canvasService.clearCanvas();\n        this.canvasService.drawSquare(2, 2, 2);\n        this.canvasService.drawSquare(1, 1, 4);\n        this.canvasService.drawSquare(0, 0, 6);\n        this.canvasService.drawLine(0, 3, 2, 3);\n        this.canvasService.drawLine(4, 3, 6, 3);\n        this.canvasService.drawLine(3, 0, 3, 2);\n        this.canvasService.drawLine(3, 4, 3, 6);\n\n        this.circles.forEach(circle => {\n            this.canvasService.drawCircle(circle);\n        });\n\n        this.redPieces.filter(piece => piece.x != null && piece.y != null)\n            .forEach(filteredPiece => this.canvasService.drawCircle(filteredPiece));\n        this.greenPieces.filter(piece => piece.x != null && piece.y != null)\n            .forEach(filteredPiece => this.canvasService.drawCircle(filteredPiece));\n\n        this.availableReds = this.redPieces.filter(piece => piece.x == null && piece.y == null).length;\n        this.availableGreens = this.greenPieces.filter(piece => piece.x == null && piece.y == null).length;\n\n        this.usedReds = this.redPieces.filter(piece => piece.x != null && piece.y != null).length;\n        this.usedGreens = this.greenPieces.filter(piece => piece.x != null && piece.y != null).length;\n    }\n\n\n    setAvailablePiece(pieces: ICircle[], circle: ICircle): void {\n        const foundPiece = pieces.find(piece => piece.x == null && piece.y == null);\n        if (foundPiece) {\n            foundPiece.x = circle.x;\n            foundPiece.y = circle.y;\n            if (this.checkForMill(pieces, foundPiece)) {\n                this.moveType = MoveType.REMOVE;\n                this.drawBoard();\n            } else {\n                this.changeTurn();\n            }\n        }\n    }\n\n    changeTurn() {\n        if (this.turn === Turn.RED) {\n            this.turn = Turn.GREEN;\n        } else {\n            this.turn = Turn.RED;\n        }\n        this.drawBoard();\n    }\n\n    checkForMill(pieces: ICircle[], newPiece: ICircle): boolean {\n        if (newPiece.x === 3) {\n            if (pieces.filter(piece => piece.x === newPiece.x &&\n                ((newPiece.y > 3 && piece.y > 3) || (newPiece.y < 3 && piece.y < 3))).length === 3) {\n                return true;\n            }\n        } else {\n            if (pieces.filter(piece => piece.x === newPiece.x).length === 3) {\n                return true;\n            }\n        }\n\n        if (newPiece.y === 3) {\n            if (pieces.filter(piece => piece.y === newPiece.y &&\n                ((newPiece.x > 3 && piece.x > 3) || (newPiece.x < 3 && piece.x < 3))).length === 3) {\n                return true;\n            }\n        } else {\n            if (pieces.filter(piece => piece.y === newPiece.y).length === 3) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    findIntersectingPiece(pieces: ICircle[], relativePosition: IPosition): ICircle {\n        for (const piece of pieces) {\n            if (this.canvasService.isIntersect(relativePosition, piece)) {\n                return piece;\n            }\n        }\n        return null;\n    }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        NoopAnimationsModule,\n        MatCardModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {IPosition, Position} from './position.model';\nimport {ICircle} from './circle.model';\n\nexport class CanvasService {\n\n  ctx: CanvasRenderingContext2D;\n\n  constructor(private canvas: HTMLCanvasElement, private baseSize: number, private offset: number) {\n    this.ctx = canvas.getContext('2d');\n  }\n\n  public drawSquare(x: number, y: number, size: number): void {\n    const finalSize = size * this.baseSize;\n    const finalX = this.getRealCoordinate(x);\n    const finalY = this.getRealCoordinate(y);\n    this.ctx.beginPath();\n    this.ctx.rect(finalX, finalY, finalSize, finalSize);\n    this.ctx.stroke();\n  }\n\n  public drawLine(xStart: number, yStart: number, xEnd: number, yEnd: number): void {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.getRealCoordinate(xStart), this.getRealCoordinate(yStart));\n    this.ctx.lineTo(this.getRealCoordinate(xEnd), this.getRealCoordinate(yEnd));\n    this.ctx.stroke();\n  }\n\n  public drawCircle(circle: ICircle): void {\n    this.ctx.beginPath();\n    const finalX = this.getRealCoordinate(circle.x);\n    const finalY = this.getRealCoordinate(circle.y);\n    this.ctx.arc(finalX, finalY, circle.radius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = circle.color;\n    this.ctx.fill();\n  }\n\n  public clearCanvas(): void {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  public getPixel(relativePosition: IPosition): string {\n    return this.ctx.getImageData(relativePosition.x, relativePosition.y, 1, 1).data.toString();\n  }\n\n  public getMousePositionInCanvas(evt: MouseEvent): IPosition {\n    const rect = this.canvas.getBoundingClientRect();\n    return new Position(\n      evt.clientX - rect.left,\n      evt.clientY - rect.top\n    );\n  }\n\n  private getRealCoordinate(val: number): number {\n    return val * this.baseSize + this.offset;\n  }\n\n  public isIntersect(point: IPosition, circle: ICircle): boolean {\n    return Math.sqrt((point.x - this.getRealCoordinate(circle.x)) ** 2\n      + (point.y - this.getRealCoordinate(circle.y)) ** 2) < circle.radius;\n  }\n}\n","export interface ICircle {\r\n  x: number;\r\n  y: number;\r\n  radius: number;\r\n  color: string;\r\n}\r\n\r\nexport class Circle implements ICircle {\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public radius: number,\r\n    public color: string\r\n  ) {\r\n  }\r\n}\r\n","export enum MoveType {\n  NORMAL = 'NORMAL', REMOVE = 'REMOVE'\n}\n","export interface IPosition {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport class Position implements IPosition {\r\n  constructor(\r\n    public x: number,\r\n    public y: number\r\n  ) {\r\n  }\r\n}\r\n","export enum Turn {\n    RED = 'RED', GREEN = 'GREEN'\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}